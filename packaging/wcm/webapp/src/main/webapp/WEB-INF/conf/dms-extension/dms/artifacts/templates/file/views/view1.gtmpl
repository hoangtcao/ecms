<%
  import java.util.List;
  import java.util.ArrayList;
  import javax.jcr.Node;
  import javax.jcr.NodeIterator;
  import org.exoplatform.webui.core.UIPopupWindow;
  import org.exoplatform.web.application.Parameter;
  import org.exoplatform.ecm.webui.utils.Utils; 
  import org.exoplatform.services.wcm.core.NodeLocation;
  import org.exoplatform.services.jcr.RepositoryService;
  import org.exoplatform.wcm.webui.reader.ContentReader;
  import org.exoplatform.ecm.webui.viewer.PDFViewer;
  
  
  public Node getFileLangNode(Node currentNode) throws Exception {
    if(currentNode.isNodeType("nt:unstructured")) {
      if(currentNode.getNodes().getSize() > 0) {
        NodeIterator nodeIter = currentNode.getNodes() ;
        while(nodeIter.hasNext()) {
          Node ntFile = nodeIter.nextNode() ;
          if(ntFile.getPrimaryNodeType().getName().equals("nt:file")) {
            return ntFile ;
          }
        }
        return currentNode ;
      }
    }
    return currentNode ;
  }
  
  def rcontext = _ctx.getRequestContext();
  rcontext.getJavascriptManager().loadScriptResource("ecm-utils");
  rcontext.getJavascriptManager().require("SHARED/ecm-browser", "browser").
  addScripts("browser.DMSBrowser.managerResize();");
  RepositoryService rService = uicomponent.getApplicationComponent(RepositoryService.class);
  String repository = rService.getCurrentRepository().getConfiguration().getName();  
  
  
  UIPopupWindow uiPopupWindow = uicomponent.getAncestorOfType(UIPopupWindow.class);
  def resizeBlock = "class=\"UIResizableBlock\"";
  if(uiPopupWindow != null) resizeBlock = ""; 
  
  def originNode = uicomponent.getNode();
  def currentNode = getFileLangNode(originNode) ;
  currentNode = org.exoplatform.wcm.webui.Utils.getRealNode(currentNode);
  def currentNodePath = org.exoplatform.wcm.webui.Utils.getRealNodePath(currentNode);
  def contentNode = currentNode.getNode("jcr:content") ;
  def title = org.exoplatform.ecm.webui.utils.Utils.getTitle(currentNode);
  def mimeType = contentNode.getProperty("jcr:mimeType").getString() ;
  List<String> unsupportMimeTypeText = new ArrayList<String>();
  unsupportMimeTypeText.add("text/rtf");
  String portalName = uicomponent.getPortalName() ;
  String restContextName = org.exoplatform.ecm.webui.utils.Utils.getRestContextName(portalName);
  
  public String formatNodeName(String text) {
    return text.replaceAll("'", "\\\\'") ;
  }
  
  StringBuilder sb = new StringBuilder();
  String ndPath = currentNode.getPath();
  if (ndPath.startsWith("/")) {
    ndPath = ndPath.substring(1);
  }
  
  def encodedPath = URLEncoder.encode(ndPath, "utf-8");
  encodedPath = encodedPath.replaceAll ("%2F", "/"); //we won't encode the slash characters in the path
  
  sb.append("/").append(restContextName).append("/contents/download/");
  sb.append(currentNode.getSession().getWorkspace().getName()).append("/").append(encodedPath);
  if (originNode.isNodeType("nt:frozenNode")) {
    sb.append("?version=" + originNode.getParent().getName());
  }
  def downloadLink = sb.toString();
  def fileComponent = uicomponent.getUIComponent(mimeType);
  if(!(fileComponent instanceof PDFViewer) || (fileComponent instanceof PDFViewer && ((PDFViewer)fileComponent).getMaximumOfPage() <= 0) ) {   
%>

<div $resizeBlock>
  <style>
    <% _ctx.include(uicomponent.getTemplateSkin("nt:file", "Stylesheet")); %>
  </style>
  <div class="fileContent">
    <div class="navigationContainer uiBox"> 
      <h6 class="title clearfix">
        <%          
          if (!(fileComponent == null || (fileComponent instanceof PDFViewer && ((PDFViewer)fileComponent).getMaximumOfPage() <=0 ))) {
          %>
            <a class="pull-right" href="$downloadLink"><i class="uiIconDownload"></i> <%=_ctx.appRes("File.view.label.download")%></a>
        <%}%>
        
        <div class="topTitle"><%=title %></div>
      </h6>
      <div class="content uiContentBox">
          <%
            if(fileComponent != null) {
            uicomponent.renderUIComponent(fileComponent);
            } else {
          %>
            <div class="uiUnEditable clearfix">
              <div class="iconContainer">
                <i class="<%=Utils.getNodeTypeIcon(currentNode, "uiIcon64x64")%>"></i>
              </div>
              <div class="detailContainer">
                <h4><%=_ctx.appRes("File.view.label.not-viewable")%></h4>
                <a class="btn btn-primary" href="$downloadLink"><%=_ctx.appRes("File.view.label.download")%></a>
                <span><%=_ctx.appRes("File.view.label.using-webDAV")%></span>
              </div>
            </div>
          <%}%>
      </div>
    </div>
    <div><% _ctx.include(uicomponent.getViewTemplate("mix:votable", "view1")); %></div>
    <div><% _ctx.include(uicomponent.getViewTemplate("exo:comments", "view1")); %></div>
  </div>
</div>


<%} else {%>

<div $resizeBlock>
<style>
  <% _ctx.include(uicomponent.getTemplateSkin("nt:file", "Stylesheet")); %>
</style>
<div class="fileContent">
    
    <div class="content uiContentBox">
        <%
          if(fileComponent != null) {
          uicomponent.renderUIComponent(fileComponent);
          } else {
        %>
          <div class="uiUnEditable clearfix">
            <div class="iconContainer">
              <i class="<%=Utils.getNodeTypeIcon(currentNode, "uiIcon64x64")%>"></i>
            </div>
            <div class="detailContainer">
              <h4><%=_ctx.appRes("File.view.label.not-viewable")%></h4>
              <a class="btn btn-primary" href="$downloadLink"><%=_ctx.appRes("File.view.label.download")%></a>
              <span><%=_ctx.appRes("File.view.label.using-webDAV")%></span>
            </div>
          </div>
        <%}%>
    </div>
  <div><% _ctx.include(uicomponent.getViewTemplate("mix:votable", "view1")); %></div>
  <div><% _ctx.include(uicomponent.getViewTemplate("exo:comments", "view1")); %></div>
</div>
</div>

<%}%>
